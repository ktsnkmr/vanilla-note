{"version":3,"sources":["webpack:///./src/templates/tags-post.js"],"names":["TagsPost","pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","title","description","css","map","node","slug","fields","frontmatter","key","to"],"mappings":"6aA8GeA,UAvGE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACvBC,EAAQF,EAARE,IADkC,EAEZD,EAAKE,kBAA3BC,EAFkC,EAElCA,MAAOC,EAF2B,EAE3BA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEH,EAFF,IAIf,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CACEK,MAAM,WACNC,YAAY,mBAEd,mBACEC,IAAG,GAYH,kCACA,kBACEA,IAAG,GAOFH,GAEH,sBACGF,EAAMM,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAL,EAAUI,EAAKG,YAAfP,MACR,OACE,kBAAIQ,IAAKH,GACP,YAAC,OAAD,CAAMI,GAAIJ,GAAOL,QASzB,YAAC,OAAD,CAAMS,GAAG,SAAT","file":"component---src-templates-tags-post-js-cfed661ce2f9dd2c8e70.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport { css } from \"@emotion/react\"\nimport Layout from \"../components/layout\"\nimport PropTypes from \"prop-types\"\nimport Seo from \"../components/seo\"\n\nconst TagsPost = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`\n\n  return (\n    <Layout>\n      <Seo\n        title=\"タグ別の記事一覧\"\n        description=\"投稿記事をタグでまとめました\"\n      />\n      <div\n        css={css`\n          @media (max-width: 930px) {\n            width: 100%;\n            padding-right: 0rem;\n          }\n          box-sizing: border-box;\n          float: left;\n          padding-right: 3rem;\n          margin-bottom: 3rem;\n          width: 65%;\n        `}\n      >\n        <h1>タグ別の記事一覧</h1>\n        <h2\n          css={css`\n            display: inline-block;\n            font-size: 2rem;\n            margin-bottom: 3rem;\n            padding-top: 0;\n          `}\n        >\n          {tagHeader}\n        </h2>\n        <ul>\n          {edges.map(({ node }) => {\n            const { slug } = node.fields\n            const { title } = node.frontmatter\n            return (\n              <li key={slug}>\n                <Link to={slug}>{title}</Link>\n              </li>\n            )\n          })}\n        </ul>\n        {/*\n              This links to a page that does not yet exist.\n              You'll come back to it!\n            */}\n        <Link to=\"/tags\">All tags</Link>\n      </div>\n    </Layout>\n  )\n}\n\nTagsPost.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport const pageQuery = graphql`\n  query TagsPostQuery($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default TagsPost\n"],"sourceRoot":""}